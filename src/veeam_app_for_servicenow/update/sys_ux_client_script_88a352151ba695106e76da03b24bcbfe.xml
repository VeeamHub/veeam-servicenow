<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <includes>e75113c0c3302010de10a0f89d40dd0e</includes>
        <macroponent display_value="List">3b935ed11ba695106e76da03b24bcb4d</macroponent>
        <name>listUserPrefState</name>
        <required_translations>[ ]</required_translations>
        <script><![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {any} params.event
 * @param {any} params.imports
 */
function handler({api, event, helpers, imports}) {
    // event name
    const eventName = event.name;
    
    // import the getUserPreference method from userPreferenceUtils script includes
    const {
        getUserPreference
    } = imports["sn_uib_base_aw.userPreferenceUtils"](api.context.props.userPrefs);

    /**
     * setWrapListText - toggle the srap list text behavior
     */
    const setWrapListText = () => {
        // show preference name constant
        const WRAP_LIST_TEXT_PREF_NAME = "workspace.wrapListText";

        // fetch the user's wrap list text preference value
        const pref = getUserPreference(WRAP_LIST_TEXT_PREF_NAME);

        api.setState('wrapListText', pref);
    };

    /**
     * onLoadUserPreference - if User pref from DR lookup exists, save it to client state.
     */
    const onLoadUserPreference = (userPrefs) => {
        if(userPrefs.length > 0) {
            userPrefs.forEach((userPref) => {
                switch(userPref.name) {
                    case api.state.listRatioPreference:
                        if(userPref.value) 
                            api.setState('listDividerPosition', userPref.value);
                        break;
                    case api.state.listMenuOpenPreference:
                        const closed = userPref.value === 'false';
                        api.setState('listMenuOpen', !closed);
                        api.setState('listDisplayPanes', closed? 'right': 'both');
                        break;
                }
            });
        }
    };

    /**
     * onLoadListPref - When page is loading, read the list ratio preference via DR
     */
    const onLoadListPref = () => {
        // Set the preferences we want to load
        api.setState('listPreferences', api.state.listRatioPreference + ',' + api.state.listMenuOpenPreference);

        // the preference name is loaded by DR from client state var, this 
        // calls the DR to look it up. Then DR calls the DATA_FETCH_SUCCEEDED
        // event handler (in switch statement below) to update state variable    
        api.data.getListPreferences.refresh();
    };

    // handle the wrap list text collapsed state based on the macroponent ready & 
    // macroponent property change events
    switch(eventName) {
        case 'MACROPONENT_READY':
            setWrapListText();
            onLoadListPref();
            break;

        case 'MACROPONENT_PROPERTY_CHANGED':
            if(event.payload.name === 'userPrefs') 
                setWrapListText();    
            break;

        case 'DATA_FETCH_SUCCEEDED':
            if (event.elementId === 'getListPreferences') 
                onLoadUserPreference(api.data.getListPreferences.result.preferences);
            break;

        default:
            break;
    }
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>c.girbu</sys_created_by>
        <sys_created_on>2022-10-14 06:28:35</sys_created_on>
        <sys_id>88a352151ba695106e76da03b24bcbfe</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>listUserPrefState</sys_name>
        <sys_package display_value="Veeam App" source="x_tesgh_veeam_app">d50434871b9dd91063fd6243604bcb7b</sys_package>
        <sys_policy/>
        <sys_scope display_value="Veeam App">d50434871b9dd91063fd6243604bcb7b</sys_scope>
        <sys_update_name>sys_ux_client_script_88a352151ba695106e76da03b24bcbfe</sys_update_name>
        <sys_updated_by>c.girbu</sys_updated_by>
        <sys_updated_on>2022-10-14 06:28:53</sys_updated_on>
        <type>default</type>
    </sys_ux_client_script>
</record_update>
